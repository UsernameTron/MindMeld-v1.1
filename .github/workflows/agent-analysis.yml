name: Agent Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jsonschema faiss-cpu sentence-transformers ollama
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

    - name: Install Ollama
      run: |
        curl -fsSL https://ollama.com/install.sh | sh
        ollama serve &
        sleep 10

    - name: Run agent analysis
      run: |
        python analyze_agents_safe_fixed.py

    - name: Run sample agent reports
      run: |
        mkdir -p reports
        # Run a few representative agents
        python run_agent.py CodeAnalyzerAgent src/ --output-dir=reports/CodeAnalyzerAgent
        python run_agent.py test_generator src/ --output-dir=reports/test_generator
        python run_agent.py dependency_agent src/ --output-dir=reports/dependency_agent

    - name: Validate reports
      run: |
        python3 -c "import json, jsonschema, glob, sys; from pathlib import Path; schema_path = Path('agent_report_schema.json'); with open(schema_path) as f: SCHEMA = json.load(f); failed = False; files = glob.glob('reports/*/*.json'); for report_file in files: try: with open(report_file) as f2: data = json.load(f2) jsonschema.validate(instance=data, schema=SCHEMA) print(f'✅ {report_file} is valid') except json.JSONDecodeError: print(f'❌ {report_file} is not valid JSON') failed = True except jsonschema.exceptions.ValidationError as e: print(f'❌ {report_file} failed validation: {e}') failed = True except Exception as e: print(f'❌ Error reading {report_file}: {e}') failed = True if failed: print('Some reports failed validation') sys.exit(1) else: print('All reports passed validation')"
    - name: Upload agent reports
      uses: actions/upload-artifact@v4
      with:
        name: agent-reports
        path: reports/
