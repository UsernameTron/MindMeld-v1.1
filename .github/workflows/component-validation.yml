name: Component Validation

on:
  pull_request:
    paths:
      - 'frontend/src/components/**'
      
jobs:
  validate-components:
    # Temporary workaround: use ubuntu-22.04 runner due to missing upload-artifact IAP on ubuntu-24.04 (May 2025)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      
      - name: Setup Node.js
        uses: actions/setup-node@3235b876344d2a9aa001b8d1453c930bba69e610
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
        
      - name: Run component verification
        run: |
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          if [ -z "$BASE_SHA" ] || ! git cat-file -e $BASE_SHA; then
            BASE_SHA=$(git rev-parse origin/main)
          fi
          CHANGED_DIRS=$(git diff --name-only $BASE_SHA ${{ github.sha }} | grep -oP 'frontend/src/components/\K[^/]+' | sort -u)
          for DIR in $CHANGED_DIRS; do
            ./scripts/verify-component.sh $DIR
          done
        
      - name: Run tests for changed components
        run: |
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          if [ -z "$BASE_SHA" ] || ! git cat-file -e $BASE_SHA; then
            BASE_SHA=$(git rev-parse origin/main)
          fi
          CHANGED_DIRS=$(git diff --name-only $BASE_SHA ${{ github.sha }} | grep -oP 'frontend/src/components/\K[^/]+' | sort -u)
          for DIR in $CHANGED_DIRS; do
            npm test -- --testPathPattern=$DIR
          done
        working-directory: ./frontend

  tech-debt-check:
    # Temporary workaround: use ubuntu-22.04 runner due to missing upload-artifact IAP on ubuntu-24.04 (May 2025)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      
      - name: Setup Node.js
        uses: actions/setup-node@3235b876344d2a9aa001b8d1453c930bba69e610
        with:
          node-version: '18'
          
      - name: Run technical debt analysis
        run: |
          node ./scripts/analyze-tech-debt.js > tech-debt-report.md
          
# --- Artifact upload workaround: use GitHub Releases as temporary storage (see actions-runner-workaround.md) ---
      - name: Generate unique release tag
        id: tag
        run: |
          echo "tag=tech-debt-report-${{ github.run_id }}-$(date +%s)" >> $GITHUB_OUTPUT

      - name: Package tech debt report
        run: |
          zip tech-debt-report.zip tech-debt-report.md

      - name: Upload tech debt report as release asset
        uses: softprops/action-gh-release@v2
        with:
          files: tech-debt-report.zip
          tag_name: ${{ steps.tag.outputs.tag }}
          draft: true
          prerelease: false
          fail_on_unmatched_files: true
          body: "Temporary artifact for workflow ${{ github.workflow }} (Run #${{ github.run_id }})"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # To download artifact in another job, use the GitHub API (see actions-runner-workaround.md)

      # Cleanup: delete the draft release after workflow completion
      - name: Cleanup temporary release
        if: always()
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG" | \
            jq -r '.id')
          if [ "$RELEASE_ID" != "null" ]; then
            curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
          fi
      # --- End workaround ---
